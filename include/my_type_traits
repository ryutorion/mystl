#ifndef MY_TYPE_TRAITS_INCLUDED
#define MY_TYPE_TRAITS_INCLUDED

namespace my
{
	template <class T, T v>
	struct integral_constant
	{
		static constexpr T value = v;
		using value_type = T;
		using type = integral_constant<T, v>;
		constexpr operator value_type() const noexcept { return value; }
		constexpr value_type operator ()() const noexcept { return value; }
	};

	template <bool B>
	using bool_constant = integral_constant<bool, B>;
}

#endif // MY_TYPE_TRAITS_INCLUDED
